/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested, IsDate } from "class-validator";
import { AppointmentUpdateManyWithoutMembersInput } from "./AppointmentUpdateManyWithoutMembersInput";
import { Type } from "class-transformer";
import { AttendanceUpdateManyWithoutMembersInput } from "./AttendanceUpdateManyWithoutMembersInput";
import { CustomerSupportUpdateManyWithoutMembersInput } from "./CustomerSupportUpdateManyWithoutMembersInput";
import { MembershipWhereUniqueInput } from "../../membership/base/MembershipWhereUniqueInput";

@InputType()
class MemberUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => AppointmentUpdateManyWithoutMembersInput,
  })
  @ValidateNested()
  @Type(() => AppointmentUpdateManyWithoutMembersInput)
  @IsOptional()
  @Field(() => AppointmentUpdateManyWithoutMembersInput, {
    nullable: true,
  })
  appointments?: AppointmentUpdateManyWithoutMembersInput;

  @ApiProperty({
    required: false,
    type: () => AttendanceUpdateManyWithoutMembersInput,
  })
  @ValidateNested()
  @Type(() => AttendanceUpdateManyWithoutMembersInput)
  @IsOptional()
  @Field(() => AttendanceUpdateManyWithoutMembersInput, {
    nullable: true,
  })
  attendances?: AttendanceUpdateManyWithoutMembersInput;

  @ApiProperty({
    required: false,
    type: () => CustomerSupportUpdateManyWithoutMembersInput,
  })
  @ValidateNested()
  @Type(() => CustomerSupportUpdateManyWithoutMembersInput)
  @IsOptional()
  @Field(() => CustomerSupportUpdateManyWithoutMembersInput, {
    nullable: true,
  })
  customerSupports?: CustomerSupportUpdateManyWithoutMembersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => MembershipWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MembershipWhereUniqueInput)
  @IsOptional()
  @Field(() => MembershipWhereUniqueInput, {
    nullable: true,
  })
  membership?: MembershipWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;
}

export { MemberUpdateInput as MemberUpdateInput };
